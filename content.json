{"meta":{"title":"Honly's Blog","subtitle":null,"description":"Stay hungry, stay foolish.","author":"Honly","url":"http://guanhonly.github.io"},"pages":[],"posts":[{"title":"HBase原理探究（1）","slug":"hbase-construction1","date":"2018-12-01T12:21:12.000Z","updated":"2018-12-02T03:49:27.370Z","comments":true,"path":"2018/12/01/hbase-construction1/","link":"","permalink":"http://guanhonly.github.io/2018/12/01/hbase-construction1/","excerpt":"","text":"1. HBase的行、列和列族HBase的最基本的单位是列(column)，一列或多列形成一行(row)，并由唯一的行键(rowkey)来确定存储，rowkey按照字典排序。 一个表(table)中有若干行，其中每列可能有多个版本，这些不同的版本按照时间戳(timestamp)区分。 若干个列构成一个列族(column family)，一个列族中的所有列存储在一个HFile中。列族在创建表时就定义好，不能频繁修改，数量不能太多，而一个列族中的列可以有数百万，列值也没有类型和长度的规定。 列中的值允许为空，有利于存储十分稀疏的数据（这也是与传统关系型数据库相比一个很大的优势）。 关系型数据库和HBase的行列关系如下图： 取某个特定的值可以用table, rowkey, family, column, timestamp。其中timestamp由系统默认指定，也可以由用户使用。读取时优先读取新值。 2. 负载均衡HBase中扩展和负载均衡的基本单元称为region。region为按照行键排列的区间，如果region太大，系统会将他们动态地拆分，相反就会合并多个region。 一张表初始时只有一个region，当用户开始向表中插入数据时，系统会检查这个region大小，如果超过阈值，则会在中间键处将这些region分割开来，拆分成两个大致相等的region。 每一个region只能由一台region server加载，有一个region server可以同时加载多个region。其中region在region server中的分布为分散分布(如下图)。 每个region由多个store构成，一个store保存着一个column family。每个store由一个memStore和0个或多个storefile组成，storefile以HFile的形式存储在hdfs中。memstore用于在内存中缓存一定大小的数据，达到一定大小后批量写入HFile(flush)，数据是有序的。","categories":[],"tags":[{"name":"HBase","slug":"HBase","permalink":"http://guanhonly.github.io/tags/HBase/"}]},{"title":"基于hexo的marble模板","slug":"howInstall","date":"2018-12-01T11:36:39.000Z","updated":"2018-12-02T02:24:46.803Z","comments":true,"path":"2018/12/01/howInstall/","link":"","permalink":"http://guanhonly.github.io/2018/12/01/howInstall/","excerpt":"","text":"我的旧版博客使用的模板。项目github地址：hexo-theme-marble 自己动手做的一个github个人主页，由于之前没有做过前端，所以在@ppoffice的Alex项目基础上改的。主要是根据我的个人喜好进行的界面的调整，并增加了评论功能。评论功能采用的gitalk。 整个界面追求极致简洁，黑白配色，所以取名marble。 安装方法：1. nodejs和hexo的安装可以参考这篇博客：用Hexo + github搭建自己的博客 — 再也不用羡慕别人了！ 2. 在你新建的hexo目录下，安装这个主题：1git clone https://github.com/guanhonly/hexo-theme-marble themes/marble marble要求Hexo 2.4及以上版本 3. 更改clone后的marble中的_config.yml，相关参数可见Alex的文档4. gitalk相关配置 首先，去这里申请github的授权，获得client ID和client Secret。 然后，修改 _config.yml中的相关配置：12345678gitalk: enable: true language: # 指定语言，默认从系统中获取 owner: # 申请时的owner admin: # 管理员，如果没有其他人，填自己 github_repo: # 用与保存评论的仓库名，建议填个人主页对应的仓库 client_id: # 刚刚生成的client ID client_secret: # 刚刚生成的client Secret 5. 在个人主页的根目录下，运行1hexo clean 然后运行1hexo g 最后运行1hexo d 过一会儿就可以上看到使用了这个模板的个人主页了 效果：","categories":[],"tags":[{"name":"实用教程","slug":"实用教程","permalink":"http://guanhonly.github.io/tags/实用教程/"}]},{"title":"关于我","slug":"aboutme","date":"2016-12-31T16:00:00.000Z","updated":"2018-12-02T02:26:32.842Z","comments":true,"path":"2017/01/01/aboutme/","link":"","permalink":"http://guanhonly.github.io/2017/01/01/aboutme/","excerpt":"","text":"非计算机专业边缘人士热爱技术，努力学习中Stay hungry, stay foolish","categories":[],"tags":[]}]}